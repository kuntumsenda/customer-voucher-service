// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: brand/brand.proto

package brand

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateBrandReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBrandReq) Reset() {
	*x = CreateBrandReq{
		// NOSONAR : Auto-generated function, intentionally left blank
	}
	mi := &fileBrandBrandProtoMsgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBrandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBrandReq) ProtoMessage() {
	// NOSONAR : Auto-generated function, intentionally left blank
}

func (x *CreateBrandReq) ProtoReflect() protoreflect.Message {
	mi := &fileBrandBrandProtoMsgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBrandReq.ProtoReflect.Descriptor instead.
func (*CreateBrandReq) Descriptor() ([]byte, []int) {
	return fileBrandBrandProtoRawDescGZIP(), []int{0}
}

func (x *CreateBrandReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateBrandReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateBrandRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSuccess     bool                   `protobuf:"varint,1,opt,name=isSuccess,proto3" json:"isSuccess,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBrandRes) Reset() {
	*x = CreateBrandRes{
		// NOSONAR : Auto-generated function, intentionally left blank
	}
	mi := &fileBrandBrandProtoMsgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBrandRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBrandRes) ProtoMessage() {
	// NOSONAR : Auto-generated function, intentionally left blank
}

func (x *CreateBrandRes) ProtoReflect() protoreflect.Message {
	mi := &fileBrandBrandProtoMsgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBrandRes.ProtoReflect.Descriptor instead.
func (*CreateBrandRes) Descriptor() ([]byte, []int) {
	return fileBrandBrandProtoRawDescGZIP(), []int{1}
}

func (x *CreateBrandRes) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type Brand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedDate   string                 `protobuf:"bytes,4,opt,name=createdDate,proto3" json:"createdDate,omitempty"`
	ModifiedDate  string                 `protobuf:"bytes,5,opt,name=modifiedDate,proto3" json:"modifiedDate,omitempty"`
	IsDeleted     *bool                  `protobuf:"varint,6,opt,name=isDeleted,proto3,oneof" json:"isDeleted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Brand) Reset() {
	*x = Brand{
		// NOSONAR : Auto-generated function, intentionally left blank
	}
	mi := &fileBrandBrandProtoMsgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Brand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Brand) ProtoMessage() {
	// NOSONAR : Auto-generated function, intentionally left blank
}

func (x *Brand) ProtoReflect() protoreflect.Message {
	mi := &fileBrandBrandProtoMsgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Brand.ProtoReflect.Descriptor instead.
func (*Brand) Descriptor() ([]byte, []int) {
	return fileBrandBrandProtoRawDescGZIP(), []int{2}
}

func (x *Brand) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Brand) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Brand) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Brand) GetCreatedDate() string {
	if x != nil {
		return x.CreatedDate
	}
	return ""
}

func (x *Brand) GetModifiedDate() string {
	if x != nil {
		return x.ModifiedDate
	}
	return ""
}

func (x *Brand) GetIsDeleted() bool {
	if x != nil && x.IsDeleted != nil {
		return *x.IsDeleted
	}
	return false
}

type ListBrandReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBrandReq) Reset() {
	*x = ListBrandReq{
		// NOSONAR : Auto-generated function, intentionally left blank
	}
	mi := &fileBrandBrandProtoMsgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBrandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBrandReq) ProtoMessage() {
	// NOSONAR : Auto-generated function, intentionally left blank
}

func (x *ListBrandReq) ProtoReflect() protoreflect.Message {
	mi := &fileBrandBrandProtoMsgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBrandReq.ProtoReflect.Descriptor instead.
func (*ListBrandReq) Descriptor() ([]byte, []int) {
	return fileBrandBrandProtoRawDescGZIP(), []int{3}
}

type ListBrandRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*Brand               `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBrandRes) Reset() {
	*x = ListBrandRes{
		// NOSONAR : Auto-generated function, intentionally left blank
	}
	mi := &fileBrandBrandProtoMsgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBrandRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBrandRes) ProtoMessage() {
	// NOSONAR : Auto-generated function, intentionally left blank
}

func (x *ListBrandRes) ProtoReflect() protoreflect.Message {
	mi := &fileBrandBrandProtoMsgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBrandRes.ProtoReflect.Descriptor instead.
func (*ListBrandRes) Descriptor() ([]byte, []int) {
	return fileBrandBrandProtoRawDescGZIP(), []int{4}
}

func (x *ListBrandRes) GetData() []*Brand {
	if x != nil {
		return x.Data
	}
	return nil
}

var FileBrandBrandProto protoreflect.FileDescriptor

var fileBrandBrandProtoRawDesc = string([]byte{
	0x0a, 0x11, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x46, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x2e, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0xc4, 0x01, 0x0a, 0x05, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x69,
	0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x0e, 0x0a, 0x0c, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x22, 0x30, 0x0a, 0x0c, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x82, 0x01, 0x0a, 0x0c,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x0b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x15, 0x2e, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x15, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x13, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x42, 0x29, 0x5a, 0x27, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2d, 0x76, 0x6f, 0x75,
	0x63, 0x68, 0x65, 0x72, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
})

var (
	fileBrandBrandProtoRawDescOnce sync.Once
	fileBrandBrandProtoRawDescData []byte
)

func fileBrandBrandProtoRawDescGZIP() []byte {
	fileBrandBrandProtoRawDescOnce.Do(func() {
		fileBrandBrandProtoRawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(fileBrandBrandProtoRawDesc), len(fileBrandBrandProtoRawDesc)))
	})
	return fileBrandBrandProtoRawDescData
}

var fileBrandBrandProtoMsgTypes = make([]protoimpl.MessageInfo, 5)
var fileBrandBrandProtoGoTypes = []any{
	(*CreateBrandReq)(nil), // 0: brand.CreateBrandReq
	(*CreateBrandRes)(nil), // 1: brand.CreateBrandRes
	(*Brand)(nil),          // 2: brand.Brand
	(*ListBrandReq)(nil),   // 3: brand.ListBrandReq
	(*ListBrandRes)(nil),   // 4: brand.ListBrandRes
}
var fileBrandBrandProtoDepIdxs = []int32{
	2, // 0: brand.ListBrandRes.data:typeName -> brand.Brand
	0, // 1: brand.BrandService.CreateBrand:inputType -> brand.CreateBrandReq
	3, // 2: brand.BrandService.ListBrand:inputType -> brand.ListBrandReq
	1, // 3: brand.BrandService.CreateBrand:outputType -> brand.CreateBrandRes
	4, // 4: brand.BrandService.ListBrand:outputType -> brand.ListBrandRes
	3, // [3:5] is the sub-list for method outputType
	1, // [1:3] is the sub-list for method inputType
	1, // [1:1] is the sub-list for extension typeName
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field typeName
}

func init() { fileBrandBrandProtoInit() }
func fileBrandBrandProtoInit() {
	if FileBrandBrandProto != nil {
		return
	}
	fileBrandBrandProtoMsgTypes[2].OneofWrappers = []any{
		// NOSONAR : Auto-generated function, intentionally left blank
	}
	type x struct {
		// NOSONAR : Auto-generated function, intentionally left blank
	}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{
				// NOSONAR : Auto-generated function, intentionally left blank
			}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(fileBrandBrandProtoRawDesc), len(fileBrandBrandProtoRawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           fileBrandBrandProtoGoTypes,
		DependencyIndexes: fileBrandBrandProtoDepIdxs,
		MessageInfos:      fileBrandBrandProtoMsgTypes,
	}.Build()
	FileBrandBrandProto = out.File
	fileBrandBrandProtoGoTypes = nil
	fileBrandBrandProtoDepIdxs = nil
}
