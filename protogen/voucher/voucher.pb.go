// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: voucher/voucher.proto

package voucher

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateVoucherReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrandId       int32                  `protobuf:"varint,1,opt,name=brandId,proto3" json:"brandId,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CostInPoint   int64                  `protobuf:"varint,4,opt,name=costInPoint,proto3" json:"costInPoint,omitempty"`
	VoucherCode   string                 `protobuf:"bytes,5,opt,name=voucherCode,proto3" json:"voucherCode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVoucherReq) Reset() {
	*x = CreateVoucherReq{
		// NOSONAR : Auto-generated function, intentionally left blank
	}
	mi := &fileVoucherVoucherProtoMsgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVoucherReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVoucherReq) ProtoMessage() {
	// NOSONAR : Auto-generated function, intentionally left blank
}

func (x *CreateVoucherReq) ProtoReflect() protoreflect.Message {
	mi := &fileVoucherVoucherProtoMsgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVoucherReq.ProtoReflect.Descriptor instead.
func (*CreateVoucherReq) Descriptor() ([]byte, []int) {
	return fileVoucherVoucherProtoRawDescGZIP(), []int{0}
}

func (x *CreateVoucherReq) GetBrandId() int32 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *CreateVoucherReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateVoucherReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateVoucherReq) GetCostInPoint() int64 {
	if x != nil {
		return x.CostInPoint
	}
	return 0
}

func (x *CreateVoucherReq) GetVoucherCode() string {
	if x != nil {
		return x.VoucherCode
	}
	return ""
}

type CreateVoucherRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSuccess     bool                   `protobuf:"varint,1,opt,name=isSuccess,proto3" json:"isSuccess,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVoucherRes) Reset() {
	*x = CreateVoucherRes{
		// NOSONAR : Auto-generated function, intentionally left blank
	}
	mi := &fileVoucherVoucherProtoMsgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVoucherRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVoucherRes) ProtoMessage() {
	// NOSONAR : Auto-generated function, intentionally left blank
}

func (x *CreateVoucherRes) ProtoReflect() protoreflect.Message {
	mi := &fileVoucherVoucherProtoMsgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVoucherRes.ProtoReflect.Descriptor instead.
func (*CreateVoucherRes) Descriptor() ([]byte, []int) {
	return fileVoucherVoucherProtoRawDescGZIP(), []int{1}
}

func (x *CreateVoucherRes) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type Voucher struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BrandId       int32                  `protobuf:"varint,2,opt,name=brandId,proto3" json:"brandId,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	CostInPoint   int64                  `protobuf:"varint,5,opt,name=costInPoint,proto3" json:"costInPoint,omitempty"`
	CreatedDate   string                 `protobuf:"bytes,6,opt,name=createdDate,proto3" json:"createdDate,omitempty"`
	ModifiedDate  string                 `protobuf:"bytes,7,opt,name=modifiedDate,proto3" json:"modifiedDate,omitempty"`
	IsDeleted     *bool                  `protobuf:"varint,8,opt,name=isDeleted,proto3,oneof" json:"isDeleted,omitempty"`
	VoucherCode   string                 `protobuf:"bytes,9,opt,name=voucherCode,proto3" json:"voucherCode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Voucher) Reset() {
	*x = Voucher{
		// NOSONAR : Auto-generated function, intentionally left blank
	}
	mi := &fileVoucherVoucherProtoMsgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Voucher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Voucher) ProtoMessage() {
	// NOSONAR : Auto-generated function, intentionally left blank
}

func (x *Voucher) ProtoReflect() protoreflect.Message {
	mi := &fileVoucherVoucherProtoMsgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Voucher.ProtoReflect.Descriptor instead.
func (*Voucher) Descriptor() ([]byte, []int) {
	return fileVoucherVoucherProtoRawDescGZIP(), []int{2}
}

func (x *Voucher) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Voucher) GetBrandId() int32 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *Voucher) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Voucher) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Voucher) GetCostInPoint() int64 {
	if x != nil {
		return x.CostInPoint
	}
	return 0
}

func (x *Voucher) GetCreatedDate() string {
	if x != nil {
		return x.CreatedDate
	}
	return ""
}

func (x *Voucher) GetModifiedDate() string {
	if x != nil {
		return x.ModifiedDate
	}
	return ""
}

func (x *Voucher) GetIsDeleted() bool {
	if x != nil && x.IsDeleted != nil {
		return *x.IsDeleted
	}
	return false
}

func (x *Voucher) GetVoucherCode() string {
	if x != nil {
		return x.VoucherCode
	}
	return ""
}

type ListVoucherReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrandId       *int32                 `protobuf:"varint,1,opt,name=brandId,proto3,oneof" json:"brandId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVoucherReq) Reset() {
	*x = ListVoucherReq{
		// NOSONAR : Auto-generated function, intentionally left blank
	}
	mi := &fileVoucherVoucherProtoMsgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVoucherReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVoucherReq) ProtoMessage() {
	// NOSONAR : Auto-generated function, intentionally left blank
}

func (x *ListVoucherReq) ProtoReflect() protoreflect.Message {
	mi := &fileVoucherVoucherProtoMsgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVoucherReq.ProtoReflect.Descriptor instead.
func (*ListVoucherReq) Descriptor() ([]byte, []int) {
	return fileVoucherVoucherProtoRawDescGZIP(), []int{3}
}

func (x *ListVoucherReq) GetBrandId() int32 {
	if x != nil && x.BrandId != nil {
		return *x.BrandId
	}
	return 0
}

type ListVoucherRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*Voucher             `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVoucherRes) Reset() {
	*x = ListVoucherRes{
		// NOSONAR : Auto-generated function, intentionally left blank
	}
	mi := &fileVoucherVoucherProtoMsgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVoucherRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVoucherRes) ProtoMessage() {
	// NOSONAR : Auto-generated function, intentionally left blank
}

func (x *ListVoucherRes) ProtoReflect() protoreflect.Message {
	mi := &fileVoucherVoucherProtoMsgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVoucherRes.ProtoReflect.Descriptor instead.
func (*ListVoucherRes) Descriptor() ([]byte, []int) {
	return fileVoucherVoucherProtoRawDescGZIP(), []int{4}
}

func (x *ListVoucherRes) GetData() []*Voucher {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateVoucherReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CostInPoint   int64                  `protobuf:"varint,4,opt,name=costInPoint,proto3" json:"costInPoint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVoucherReq) Reset() {
	*x = UpdateVoucherReq{
		// NOSONAR : Auto-generated function, intentionally left blank
	}
	mi := &fileVoucherVoucherProtoMsgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVoucherReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVoucherReq) ProtoMessage() {
	// NOSONAR : Auto-generated function, intentionally left blank
}

func (x *UpdateVoucherReq) ProtoReflect() protoreflect.Message {
	mi := &fileVoucherVoucherProtoMsgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVoucherReq.ProtoReflect.Descriptor instead.
func (*UpdateVoucherReq) Descriptor() ([]byte, []int) {
	return fileVoucherVoucherProtoRawDescGZIP(), []int{5}
}

func (x *UpdateVoucherReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateVoucherReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateVoucherReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateVoucherReq) GetCostInPoint() int64 {
	if x != nil {
		return x.CostInPoint
	}
	return 0
}

type UpdateVoucherRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSuccess     bool                   `protobuf:"varint,1,opt,name=isSuccess,proto3" json:"isSuccess,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVoucherRes) Reset() {
	*x = UpdateVoucherRes{
		// NOSONAR : Auto-generated function, intentionally left blank
	}
	mi := &fileVoucherVoucherProtoMsgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVoucherRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVoucherRes) ProtoMessage() {
	// NOSONAR : Auto-generated function, intentionally left blank
}

func (x *UpdateVoucherRes) ProtoReflect() protoreflect.Message {
	mi := &fileVoucherVoucherProtoMsgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVoucherRes.ProtoReflect.Descriptor instead.
func (*UpdateVoucherRes) Descriptor() ([]byte, []int) {
	return fileVoucherVoucherProtoRawDescGZIP(), []int{6}
}

func (x *UpdateVoucherRes) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type DetailVoucherReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetailVoucherReq) Reset() {
	*x = DetailVoucherReq{
		// NOSONAR : Auto-generated function, intentionally left blank
	}
	mi := &fileVoucherVoucherProtoMsgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetailVoucherReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailVoucherReq) ProtoMessage() {
	// NOSONAR : Auto-generated function, intentionally left blank
}

func (x *DetailVoucherReq) ProtoReflect() protoreflect.Message {
	mi := &fileVoucherVoucherProtoMsgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailVoucherReq.ProtoReflect.Descriptor instead.
func (*DetailVoucherReq) Descriptor() ([]byte, []int) {
	return fileVoucherVoucherProtoRawDescGZIP(), []int{7}
}

func (x *DetailVoucherReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DetailVoucherRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *Voucher               `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetailVoucherRes) Reset() {
	*x = DetailVoucherRes{
		// NOSONAR : Auto-generated function, intentionally left blank
	}
	mi := &fileVoucherVoucherProtoMsgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetailVoucherRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailVoucherRes) ProtoMessage() {
	// NOSONAR : Auto-generated function, intentionally left blank
}

func (x *DetailVoucherRes) ProtoReflect() protoreflect.Message {
	mi := &fileVoucherVoucherProtoMsgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailVoucherRes.ProtoReflect.Descriptor instead.
func (*DetailVoucherRes) Descriptor() ([]byte, []int) {
	return fileVoucherVoucherProtoRawDescGZIP(), []int{8}
}

func (x *DetailVoucherRes) GetData() *Voucher {
	if x != nil {
		return x.Data
	}
	return nil
}

var FileVoucherVoucherProto protoreflect.FileDescriptor

var fileVoucherVoucherProtoRawDesc = string([]byte{
	0x0a, 0x15, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x2f, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72,
	0x22, 0xa6, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x75, 0x63, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x73, 0x74,
	0x49, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x6f, 0x75, 0x63, 0x68,
	0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x6f,
	0x75, 0x63, 0x68, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x30, 0x0a, 0x10, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xa4, 0x02, 0x0a, 0x07,
	0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x73, 0x74, 0x49,
	0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f,
	0x73, 0x74, 0x49, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x21, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x22, 0x3b, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x22,
	0x36, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65,
	0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7a, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x22, 0x30, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x75,
	0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x22, 0x0a, 0x10, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56,
	0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x38, 0x0a, 0x10, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x24, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x76, 0x6f,
	0x75, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x32, 0xa6, 0x02, 0x0a, 0x0e, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65,
	0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x19, 0x2e, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x3f, 0x0a,
	0x0b, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x76,
	0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x75, 0x63, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x45,
	0x0a, 0x0d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x12,
	0x19, 0x2e, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x76, 0x6f, 0x75,
	0x63, 0x68, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x6f, 0x75, 0x63, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56,
	0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x19, 0x2e, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x42, 0x2b, 0x5a, 0x29,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2d, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72,
	0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65,
	0x6e, 0x2f, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
})

var (
	fileVoucherVoucherProtoRawDescOnce sync.Once
	fileVoucherVoucherProtoRawDescData []byte
)

func fileVoucherVoucherProtoRawDescGZIP() []byte {
	fileVoucherVoucherProtoRawDescOnce.Do(func() {
		fileVoucherVoucherProtoRawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(fileVoucherVoucherProtoRawDesc), len(fileVoucherVoucherProtoRawDesc)))
	})
	return fileVoucherVoucherProtoRawDescData
}

var fileVoucherVoucherProtoMsgTypes = make([]protoimpl.MessageInfo, 9)
var fileVoucherVoucherProtoGoTypes = []any{
	(*CreateVoucherReq)(nil), // 0: voucher.CreateVoucherReq
	(*CreateVoucherRes)(nil), // 1: voucher.CreateVoucherRes
	(*Voucher)(nil),          // 2: voucher.Voucher
	(*ListVoucherReq)(nil),   // 3: voucher.ListVoucherReq
	(*ListVoucherRes)(nil),   // 4: voucher.ListVoucherRes
	(*UpdateVoucherReq)(nil), // 5: voucher.UpdateVoucherReq
	(*UpdateVoucherRes)(nil), // 6: voucher.UpdateVoucherRes
	(*DetailVoucherReq)(nil), // 7: voucher.DetailVoucherReq
	(*DetailVoucherRes)(nil), // 8: voucher.DetailVoucherRes
}
var fileVoucherVoucherProtoDepIdxs = []int32{
	2, // 0: voucher.ListVoucherRes.data:typeName -> voucher.Voucher
	2, // 1: voucher.DetailVoucherRes.data:typeName -> voucher.Voucher
	0, // 2: voucher.VoucherService.CreateVoucher:inputType -> voucher.CreateVoucherReq
	3, // 3: voucher.VoucherService.ListVoucher:inputType -> voucher.ListVoucherReq
	7, // 4: voucher.VoucherService.DetailVoucher:inputType -> voucher.DetailVoucherReq
	5, // 5: voucher.VoucherService.UpdateVoucher:inputType -> voucher.UpdateVoucherReq
	1, // 6: voucher.VoucherService.CreateVoucher:outputType -> voucher.CreateVoucherRes
	4, // 7: voucher.VoucherService.ListVoucher:outputType -> voucher.ListVoucherRes
	8, // 8: voucher.VoucherService.DetailVoucher:outputType -> voucher.DetailVoucherRes
	6, // 9: voucher.VoucherService.UpdateVoucher:outputType -> voucher.UpdateVoucherRes
	6, // [6:10] is the sub-list for method outputType
	2, // [2:6] is the sub-list for method inputType
	2, // [2:2] is the sub-list for extension typeName
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field typeName
}

func init() { fileVoucherVoucherProtoInit() }
func fileVoucherVoucherProtoInit() {
	if FileVoucherVoucherProto != nil {
		return
	}
	fileVoucherVoucherProtoMsgTypes[2].OneofWrappers = []any{
		// NOSONAR : Auto-generated function, intentionally left blank
	}
	fileVoucherVoucherProtoMsgTypes[3].OneofWrappers = []any{
		// NOSONAR : Auto-generated function, intentionally left blank
	}
	type x struct {
		// NOSONAR : Auto-generated function, intentionally left blank
	}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{
				// NOSONAR : Auto-generated function, intentionally left blank
			}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(fileVoucherVoucherProtoRawDesc), len(fileVoucherVoucherProtoRawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           fileVoucherVoucherProtoGoTypes,
		DependencyIndexes: fileVoucherVoucherProtoDepIdxs,
		MessageInfos:      fileVoucherVoucherProtoMsgTypes,
	}.Build()
	FileVoucherVoucherProto = out.File
	fileVoucherVoucherProtoGoTypes = nil
	fileVoucherVoucherProtoDepIdxs = nil
}
