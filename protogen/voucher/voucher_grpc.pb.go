// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.29.3
// source: voucher/voucher.proto

package voucher

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	VoucherServiceCreateVoucherFullMethodName = "/voucher.VoucherService/CreateVoucher"
	VoucherServiceListVoucherFullMethodName   = "/voucher.VoucherService/ListVoucher"
	VoucherServiceDetailVoucherFullMethodName = "/voucher.VoucherService/DetailVoucher"
	VoucherServiceUpdateVoucherFullMethodName = "/voucher.VoucherService/UpdateVoucher"
)

// VoucherServiceClient is the client API for VoucherService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type VoucherServiceClient interface {
	CreateVoucher(ctx context.Context, in *CreateVoucherReq, opts ...grpc.CallOption) (*CreateVoucherRes, error)
	ListVoucher(ctx context.Context, in *ListVoucherReq, opts ...grpc.CallOption) (*ListVoucherRes, error)
	DetailVoucher(ctx context.Context, in *DetailVoucherReq, opts ...grpc.CallOption) (*DetailVoucherRes, error)
	UpdateVoucher(ctx context.Context, in *UpdateVoucherReq, opts ...grpc.CallOption) (*UpdateVoucherRes, error)
}

type voucherServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewVoucherServiceClient(cc grpc.ClientConnInterface) VoucherServiceClient {
	return &voucherServiceClient{cc}
}

func (c *voucherServiceClient) CreateVoucher(ctx context.Context, in *CreateVoucherReq, opts ...grpc.CallOption) (*CreateVoucherRes, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateVoucherRes)
	err := c.cc.Invoke(ctx, VoucherServiceCreateVoucherFullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *voucherServiceClient) ListVoucher(ctx context.Context, in *ListVoucherReq, opts ...grpc.CallOption) (*ListVoucherRes, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListVoucherRes)
	err := c.cc.Invoke(ctx, VoucherServiceListVoucherFullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *voucherServiceClient) DetailVoucher(ctx context.Context, in *DetailVoucherReq, opts ...grpc.CallOption) (*DetailVoucherRes, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DetailVoucherRes)
	err := c.cc.Invoke(ctx, VoucherServiceDetailVoucherFullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *voucherServiceClient) UpdateVoucher(ctx context.Context, in *UpdateVoucherReq, opts ...grpc.CallOption) (*UpdateVoucherRes, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateVoucherRes)
	err := c.cc.Invoke(ctx, VoucherServiceUpdateVoucherFullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VoucherServiceServer is the server API for VoucherService service.
// All implementations must embed UnimplementedVoucherServiceServer
// for forward compatibility.
type VoucherServiceServer interface {
	CreateVoucher(context.Context, *CreateVoucherReq) (*CreateVoucherRes, error)
	ListVoucher(context.Context, *ListVoucherReq) (*ListVoucherRes, error)
	DetailVoucher(context.Context, *DetailVoucherReq) (*DetailVoucherRes, error)
	UpdateVoucher(context.Context, *UpdateVoucherReq) (*UpdateVoucherRes, error)
	mustEmbedUnimplementedVoucherServiceServer()
}

// UnimplementedVoucherServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedVoucherServiceServer struct {
	// NOSONAR : Auto-generated function, intentionally left blank
}

func (UnimplementedVoucherServiceServer) CreateVoucher(context.Context, *CreateVoucherReq) (*CreateVoucherRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVoucher not implemented")
}
func (UnimplementedVoucherServiceServer) ListVoucher(context.Context, *ListVoucherReq) (*ListVoucherRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListVoucher not implemented")
}
func (UnimplementedVoucherServiceServer) DetailVoucher(context.Context, *DetailVoucherReq) (*DetailVoucherRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DetailVoucher not implemented")
}
func (UnimplementedVoucherServiceServer) UpdateVoucher(context.Context, *UpdateVoucherReq) (*UpdateVoucherRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateVoucher not implemented")
}
func (UnimplementedVoucherServiceServer) mustEmbedUnimplementedVoucherServiceServer() {
	// NOSONAR : Auto-generated function, intentionally left blank
}
func (UnimplementedVoucherServiceServer) testEmbeddedByValue() {
	// NOSONAR : Auto-generated function, intentionally left blank
}

// UnsafeVoucherServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to VoucherServiceServer will
// result in compilation errors.
type UnsafeVoucherServiceServer interface {
	mustEmbedUnimplementedVoucherServiceServer()
}

func RegisterVoucherServiceServer(s grpc.ServiceRegistrar, srv VoucherServiceServer) {
	// If the following call pancis, it indicates UnimplementedVoucherServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&VoucherServiceServiceDesc, srv)
}

func VoucherServiceCreateVoucherHandler(srv interface {
	// NOSONAR : Auto-generated function, intentionally left blank
}, ctx context.Context, dec func(interface {
	// NOSONAR : Auto-generated function, intentionally left blank
}) error, interceptor grpc.UnaryServerInterceptor) (interface {
	// NOSONAR : Auto-generated function, intentionally left blank
}, error) {
	in := new(CreateVoucherReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VoucherServiceServer).CreateVoucher(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: VoucherServiceCreateVoucherFullMethodName,
	}
	handler := func(ctx context.Context, req interface {
		// NOSONAR : Auto-generated function, intentionally left blank
	}) (interface {
		// NOSONAR : Auto-generated function, intentionally left blank
	}, error) {
		return srv.(VoucherServiceServer).CreateVoucher(ctx, req.(*CreateVoucherReq))
	}
	return interceptor(ctx, in, info, handler)
}

func VoucherServiceListVoucherHandler(srv interface {
	// NOSONAR : Auto-generated function, intentionally left blank
}, ctx context.Context, dec func(interface {
	// NOSONAR : Auto-generated function, intentionally left blank
}) error, interceptor grpc.UnaryServerInterceptor) (interface {
	// NOSONAR : Auto-generated function, intentionally left blank
}, error) {
	in := new(ListVoucherReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VoucherServiceServer).ListVoucher(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: VoucherServiceListVoucherFullMethodName,
	}
	handler := func(ctx context.Context, req interface {
		// NOSONAR : Auto-generated function, intentionally left blank
	}) (interface {
		// NOSONAR : Auto-generated function, intentionally left blank
	}, error) {
		return srv.(VoucherServiceServer).ListVoucher(ctx, req.(*ListVoucherReq))
	}
	return interceptor(ctx, in, info, handler)
}

func VoucherServiceDetailVoucherHandler(srv interface {
	// NOSONAR : Auto-generated function, intentionally left blank
}, ctx context.Context, dec func(interface {
	// NOSONAR : Auto-generated function, intentionally left blank
}) error, interceptor grpc.UnaryServerInterceptor) (interface {
	// NOSONAR : Auto-generated function, intentionally left blank
}, error) {
	in := new(DetailVoucherReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VoucherServiceServer).DetailVoucher(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: VoucherServiceDetailVoucherFullMethodName,
	}
	handler := func(ctx context.Context, req interface {
		// NOSONAR : Auto-generated function, intentionally left blank
	}) (interface {
		// NOSONAR : Auto-generated function, intentionally left blank
	}, error) {
		return srv.(VoucherServiceServer).DetailVoucher(ctx, req.(*DetailVoucherReq))
	}
	return interceptor(ctx, in, info, handler)
}

func VoucherServiceUpdateVoucherHandler(srv interface {
	// NOSONAR : Auto-generated function, intentionally left blank
}, ctx context.Context, dec func(interface {
	// NOSONAR : Auto-generated function, intentionally left blank
}) error, interceptor grpc.UnaryServerInterceptor) (interface {
	// NOSONAR : Auto-generated function, intentionally left blank
}, error) {
	in := new(UpdateVoucherReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VoucherServiceServer).UpdateVoucher(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: VoucherServiceUpdateVoucherFullMethodName,
	}
	handler := func(ctx context.Context, req interface {
		// NOSONAR : Auto-generated function, intentionally left blank
	}) (interface {
		// NOSONAR : Auto-generated function, intentionally left blank
	}, error) {
		return srv.(VoucherServiceServer).UpdateVoucher(ctx, req.(*UpdateVoucherReq))
	}
	return interceptor(ctx, in, info, handler)
}

// VoucherServiceServiceDesc is the grpc.ServiceDesc for VoucherService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var VoucherServiceServiceDesc = grpc.ServiceDesc{
	ServiceName: "voucher.VoucherService",
	HandlerType: (*VoucherServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateVoucher",
			Handler:    VoucherServiceCreateVoucherHandler,
		},
		{
			MethodName: "ListVoucher",
			Handler:    VoucherServiceListVoucherHandler,
		},
		{
			MethodName: "DetailVoucher",
			Handler:    VoucherServiceDetailVoucherHandler,
		},
		{
			MethodName: "UpdateVoucher",
			Handler:    VoucherServiceUpdateVoucherHandler,
		},
	},
	Streams: []grpc.StreamDesc{
		// NOSONAR : Auto-generated function, intentionally left blank
	},
	Metadata: "voucher/voucher.proto",
}
